import org.apache.tools.ant.taskdefs.condition.Os
import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version '5.2.0'
}

group = 'app.cashquest.api'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

task generateReactNativeClient(type: GenerateTask) {
    generatorName = "typescript-fetch"
    inputSpec = "$rootDir/docs/api.yaml".toString()
    outputDir = "$buildDir/gen-react-native-ts".toString()
    typeMappings = [
            Date    : "Date",
            DateTime: "Date",
    ]
    additionalProperties = [
            enumPropertyNaming: "original",
            npmName           : "@bpartners/react-native-typescript-client",
            npmVersion        : project.properties["args"] ?: "latest"
    ]
}

task generateJavaClient(type: GenerateTask) {
    generatorName = "java"
    inputSpec = "$rootDir/docs/api.yaml".toString()
    outputDir = "$buildDir/gen".toString()
    apiPackage = "app.cashquest.api.endpoint.rest.api"
    invokerPackage = "app.cashquest.api.endpoint.rest.client"
    modelPackage = "app.cashquest.api.endpoint.rest.model"

    configOptions = [
            serializationLibrary: "jackson",
            dateLibrary: "custom"
    ]
    typeMappings = [
            // What date-time type to use when? https://i.stack.imgur.com/QPhGW.png
            Date: "java.time.LocalDate",
            DateTime: "java.time.Instant",
    ]
    library = "native"

    groupId = 'app.cashquest'
    id = 'cashquest-gen'
    skipValidateSpec = false
    logToStderr = true
    generateAliasAsModel = false
    enablePostProcessFile = false
}

task publishJavaClientToMavenLocal(type: Exec, dependsOn: generateJavaClient) {
    if (Os.isFamily(Os.FAMILY_WINDOWS)){
        commandLine './.shell/publish_gen_to_maven_local.bat'
    } else {
        commandLine './.shell/publish_gen_to_maven_local.sh'
    }
}
tasks.compileJava.dependsOn publishJavaClientToMavenLocal


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'app.cashquest:cashquest-gen:latest'
    implementation 'io.jsonwebtoken:jjwt:0.2'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
